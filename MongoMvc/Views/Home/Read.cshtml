@{
    ViewData["Title"] = "Усі дисципліни";
}

@model IEnumerable<MongoMvc.Model.Discipline>


<h2>@ViewData["Title"]</h2>

<hr/>
<p>
    @Html.ActionLink("<- До головної", "index", "Home")
</p>

@if (true)
{

    <b>@Html.ActionLink("Створити нову", "Create", "Home")</b>

}
<div class="row">
    @foreach (var item in Model)
    {        
        <div class="col-md-6 myBorders">  
            <h3>@item.Name</h3>          
            <ul>
                <li><b>Курс/Спеціалізація:</b> @GetCourse(item.Course)</li>
                <li><b>Семестр:</b> @GetYearPart(item.YearPart)</li>
                <li><b>Тип модуля:</b> @GetModuleType(item.ModuleType)</li>
                <li><b>Обсяг модуля:</b> @item.ModuleDescr</li>
                <li>
                    <b>Лектори:</b> <ul>
                        @foreach (var lc in item.Lectors)
                        {
                            <li>@lc.Name &nbsp @lc.Descr</li>
                        }
                    </ul>
                </li>
                <li><b>Семестровий контроль:</b> @GetControlType(item.ControlType)</li>
                <li><b>Посібники, підручники, тексти лекцій:</b> <ol>@Html.Raw(item.Books)</ol></li>
                <li><b>Методичні вказівки:</b> <ol>@Html.Raw(item.Instructions)</ol></li>
                <li><b>НМЕК:</b> <ol>@Html.Raw(item.HMEK)</ol></li>
                <li><b>ВНС кафедри, мережевий диск:</b> <ol>@Html.Raw(item.VNS)</ol></li>
            </ul>            
            <div class="pull-left"><sub>@item.UpdatedOn.ToString("d")</sub></div>
            <div class="pull-right">
                | @Html.ActionLink("Редагувати", "Edit", "Home", new { id = item.Id }) |
                @Html.ActionLink("Видалити", "Delete", "Home", new { id = item.Id }) |
            </div>            
        </div>        
    }
</div>

@*helper not supported by ASP.NET Core*@
@functions {
    public string GetControlType(MongoMvc.Model.ControlType ct)
    {
        switch (ct)
        {
            case MongoMvc.Model.ControlType.Exam:
                return "Екзамен";
                break;
            case MongoMvc.Model.ControlType.Zalik:
                return "Залік";
                break;
            default: return "Невідомо";
        }
    }
    public string GetModuleType(MongoMvc.Model.ModuleType mt)
    {
        switch (mt)
        {
            case MongoMvc.Model.ModuleType.Required:
                return "Обов'язковий";
                break;
            case MongoMvc.Model.ModuleType.NotRequired:
                return "Необов'язковий";
                break;
            default: return "Невідомо";
        }
    }
    public string GetYearPart(MongoMvc.Model.YearPart yp)
    {
        switch (yp)
        {
            case MongoMvc.Model.YearPart.Autumn:
                return "Осінній";
                break;
            case MongoMvc.Model.YearPart.Spring:
                return "Весняний";
                break;
            default: return "Невідомо";
        }
    }
    public string GetCourse(int course)
    {
        switch (course)
        {
            case 1:
                return "1 Курс";

            case 2:
                return "2 Курс";

            case 3:
                return "3 Курс";

            case 4:
                return "4 Курс";

            case 5:
                return "Математичне і комп'ютерне моделювання";

            case 6:
                return "Математичне моделювання мікро- і нано систем";

            case 7:
                return "Обчислювальна механіка";

            case 8:
                return "Комп'ютерні науки та інформаційні технології";

            default: return "Невідомо";
        }
    }
}